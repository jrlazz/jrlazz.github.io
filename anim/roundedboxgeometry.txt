<!DOCTYPE html>
<html lang="en">
<head>
<title>roundedboxbeometry.html</title>
<meta charset="utf-8">
<link rel="shortcut icon" href="ok.ico"/>

<style>
body{margin:0px;background-color:#024;font-family:Monospace;overflow:hidden;}
a{font-size:12pt;color:#0c0;text-decoration:none;}
</style>

<script async src="https://unpkg.com/es-module-shims@1.6.3/dist/es-module-shims.js"></script>

<script type="importmap">
	{
		"imports":{
			"three":"https://unpkg.com/three@0.160.0/build/three.module.js",
			"three/addons/":"https://unpkg.com/three@0.160.0/examples/jsm/"
		}
	}
</script>

</head>

<body>

<span id="spanA" style="position:absolute;left:95px;top:200px;color:#fc0;font-size:20pt;"></span>
<img src="img/samick_r2.png"  style="position:absolute;left:-80px;top:80px;width:80px;"></img>

<span style="position:absolute;left:10px;top:10px;color:#fc0;font-size:20.5px;">
<br><br>round: 
<input id="round" style="width:60px;color:#009;font-size:10.25pt;font-weight:bold;text-align:right;" type="number" autocomplete="on" min=0 max=16 step=1 value=4></input>
<br><br>&nbsp;<span id="reset" style="color:#f00;background-color:#ccc;cursor:pointer;border:2px outset #fc0;">&nbsp;&nbsp;&nbsp;reset&nbsp;&nbsp;&nbsp;</span></span>

<span style="position:absolute;left:10px;top:10px;color:#fc0;font-size:20.5pt;">RoundedBoxGeometry</span>
<button style="position:absolute;left:84%;top:84%;background-color:transparent;border-color:#fc0;text-align:center;"><a id="code" href="roundedboxgeometry.txt" target="_blank" style="color:#fc0;text-decoration:none;font-size:20.5px;">The Code</a></button>

<div id="divA" style="position:absolute;font-size:20.1px;top:15px;width:99%;text-align:center;color:#fc0;">
<select id="itemsel" autocomplete="off" style="font-size:20.1px;;border-width:2px;border-style:outset;color:#fc0;border-color:#f90;background-color:#024;cursor:pointer;">
<option value="matcube">Textures type THREE.CubeTextureLoader</option>
<option value="mattex1">Textures type THREE.TextureLoader with 1 image</option>
<option value="mattex6">Textures type THREE.TextureLoader with 6 images</option>
</select>
</div>

<input id="sel" style="display:none;" type="text" autocomplete="on" value="matcube"></input>

<script type="module">

import * as THREE from "three";
import { OrbitControls } from "three/addons/controls/OrbitControls.js";
import { RoundedBoxGeometry } from 'three/addons/geometries/RoundedBoxGeometry.js';

var scene,camera,renderer,controls,light,mesh,loader,loader6,cubeTexture,tex1,mattex1,georound,matcube;
var mattex6=[];
var bId=function(id){return document.getElementById(id);}
var ditemsel=bId("itemsel");
var dspanA=bId("spanA");
var ddivA=bId("divA");
var dreset=bId("reset");
var dround=bId("round");
var dsel=bId("sel");

var round=dround.value;
var qualsel=dsel.value;

	ditemsel.onchange=function TEM(){funitemsel();}
	dround.onchange=function FROUND(){ditemsel.value="qualsel";location.reload();}
	dreset.onclick=function FRESET(){dround.value=4;qualsel="matcube";location.reload();}

	scene=new THREE.Scene();
	camera=new THREE.PerspectiveCamera(60,innerWidth/innerHeight,1,1000);
	camera.position.set(10,30,60);

	renderer=new THREE.WebGLRenderer({antialias:true,alpha:true});
	renderer.setSize(window.innerWidth,window.innerHeight);
	renderer.setClearColor('#068',0);
	renderer.outputColorSpace=THREE.LinearSRGBColorSpace;
	document.body.appendChild(renderer.domElement);

	window.addEventListener('resize',onResize,false);

	controls=new OrbitControls(camera,renderer.domElement);

	light=new THREE.DirectionalLight(0xffffff,6);
	light.position.set(30,-40,40);
	scene.add(light);

	scene.add(new THREE.AmbientLight(0xffffff,10));

	loader=new THREE.CubeTextureLoader();
	loader.setCrossOrigin("");
	loader.setPath('https://threejs.org/examples/textures/cube/pisa/');
	cubeTexture=loader.load(['px.png','nx.png','py.png','ny.png','pz.png','nz.png']);
	cubeTexture.colorSpace=THREE.SRGBColorSpace;
	matcube=new THREE.MeshPhongMaterial({color:'#fff',envMap:cubeTexture});

//https://codepen.io/prisoner849/full/rNovYNB

/*
let envMap = new THREE.TextureLoader().load('https://cywarr.github.io/small-shop/TechNoir2.jpg', texture => {
  texture.colorSpace = THREE.SRGBColorSpace;
  texture.mapping = THREE.EquirectangularRefractionMapping;
});
scene.environment = envMap;
scene.background = envMap;
matcube=new THREE.MeshPhongMaterial({color:'#fff',envMap:envMap});
*/

	tex1=new THREE.TextureLoader().load('https://raw.githubusercontent.com/jrlazz/img/main/John.jpg');
	tex1.colorSpace=THREE.SRGBColorSpace;
	mattex1=new THREE.MeshStandardMaterial({color:'#fff',map:tex1});

	loader6=new THREE.TextureLoader();

	georound=new RoundedBoxGeometry(40,40,40,8,round);

	mattex6=[
		new THREE.MeshStandardMaterial({map:loader6.load('https://raw.githubusercontent.com/jrlazz/img/main/Martin.jpg')}),
		new THREE.MeshStandardMaterial({map:loader6.load('https://raw.githubusercontent.com/jrlazz/img/main/Brian.jpg')}),
		new THREE.MeshStandardMaterial({map:loader6.load('https://raw.githubusercontent.com/jrlazz/img/main/Ringo.jpg')}),
		new THREE.MeshStandardMaterial({map:loader6.load('https://raw.githubusercontent.com/jrlazz/img/main/Paul.jpg')}),
		new THREE.MeshStandardMaterial({map:loader6.load('https://raw.githubusercontent.com/jrlazz/img/main/John.jpg')}),
		new THREE.MeshStandardMaterial({map:loader6.load('https://raw.githubusercontent.com/jrlazz/img/main/George.jpg')})
	];

	mesh=new THREE.Mesh(georound,matcube);
	scene.add(mesh);

function animate(){
	requestAnimationFrame(animate);
	if(qualsel=="matcube"){dsel.value="matcube";ditemsel.value="matcube";scene.remove(mesh);mesh=new THREE.Mesh(georound,matcube);scene.add(mesh);mesh.material.color.set('#fff');}
	if(qualsel=="mattex1"){dsel.value="mattex1";ditemsel.value="mattex1";scene.remove(mesh);mesh=new THREE.Mesh(georound,mattex1);scene.add(mesh);mattex1.color.set('#777');}
	if(qualsel=="mattex6"){dsel.value="mattex6";ditemsel.value="mattex6";scene.remove(mesh);mesh=new THREE.Mesh(georound,mattex6);scene.add(mesh);for(let z=0;z<6;z++){mattex6[z].color.set('#777');}}
	renderer.render(scene,camera);
}

function onResize(){
	camera.aspect=window.innerWidth/window.innerHeight;
	camera.updateProjectionMatrix();
	renderer.setSize(window.innerWidth,window.innerHeight);
}

function funitemsel(){
	qualsel=ditemsel.value;
}

animate();

</script>

</body>

</html>
