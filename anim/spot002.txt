<!DOCTYPE html>
<html lang="en">
<head>
<title>spot002.html</title>
<meta charset="utf-8">
<link rel="shortcut icon" href="ok.ico" />
<style>
body{overflow:hidden;margin:0px;background-color:#024;font-family:Monospace;font-size:14pt;}
</style>

</head>

<script type="importmap">
	{
		"imports":{
			"three":"https://unpkg.com/three@0.171.0/build/three.module.js",
			"three/addons/":"https://unpkg.com/three@0.171.0/examples/jsm/"
		}
	}
</script>

<body>
<a href="spot002.txt" target="_blank" style="position:absolute;left:10px;top:10px;width:120px;border:2px outset #ff0;background-color:#900;color:#ff0;text-decoration:none;text-align:center;">The Code</a>

<script type="module">

import * as THREE from 'three';
import { GUI } from 'three/addons/libs/lil-gui.module.min.js';
import { OrbitControls } from 'three/addons/controls/OrbitControls.js';

var renderer, scene, camera, controls, ambient, geo, mat, mesh, spot, helper, time;

renderer=new THREE.WebGLRenderer( { antialias: true } );
renderer.setPixelRatio( window.devicePixelRatio );
renderer.setSize( window.innerWidth, window.innerHeight );
renderer.setAnimationLoop( animate );
document.body.appendChild( renderer.domElement );

renderer.shadowMap.enabled=true;
renderer.shadowMap.type=THREE.PCFSoftShadowMap;

scene=new THREE.Scene();

camera=new THREE.PerspectiveCamera(40,window.innerWidth/window.innerHeight,0.1,1000);
camera.position.set(7,4,10);

controls=new OrbitControls(camera,renderer.domElement);

ambient=new THREE.HemisphereLight('#fff','#888',0.5);
scene.add( ambient );

spot=new THREE.SpotLight('#fff',100);
spot.position.set( 2.5, 5, 2.5 );
spot.angle=Math.PI/6;
spot.penumbra=1;
spot.decay=2;
spot.distance=0;

spot.castShadow=true;
spot.shadow.mapSize.width=1024;
spot.shadow.mapSize.height=1024;
spot.shadow.camera.near=1;
spot.shadow.camera.far=10;
spot.shadow.focus=1;
scene.add(spot);

helper=new THREE.SpotLightHelper(spot);
scene.add(helper);

geo=new THREE.PlaneGeometry(10,10);
mat=new THREE.MeshStandardMaterial({color:'#c90',side:THREE.DoubleSide});
mesh=new THREE.Mesh(geo,mat);
mesh.position.set(0,-1,0);
mesh.rotation.x =-Math.PI/2;
mesh.receiveShadow=true;
scene.add(mesh);

geo=new THREE.BoxGeometry(1,1,1);
mat=new THREE.MeshStandardMaterial({color:'#09c'});
mesh=new THREE.Mesh(geo,mat);
//mesh.rotation.y=-Math.PI/2;
mesh.position.y=0.8;
mesh.castShadow=true;
mesh.receiveShadow=true;
scene.add(mesh);

window.addEventListener('resize', onWindowResize);

const gui=new GUI();
const params={
	color: spot.color.getHex(),
	intensity: spot.intensity,
	distance: spot.distance,
	angle: spot.angle,
	penumbra: spot.penumbra,
	decay: spot.decay,
	focus: spot.shadow.focus,
	shadows: true
};

gui.addColor(params,'color').onChange(function(val) {spot.color.setHex(val);});
gui.add(params,'intensity', 0, 500 ).onChange(function(val) {spot.intensity=val;});
gui.add(params,'distance', 0, 20 ).onChange(function(val) {spot.distance=val;} );
gui.add(params,'angle', 0, Math.PI / 3 ).onChange(function(val){spot.angle=val;});
gui.add(params,'penumbra', 0, 1 ).onChange( function(val){spot.penumbra=val;});
gui.add(params,'decay', 1, 2 ).onChange( function(val){spot.decay=val;});
gui.add(params,'focus', 0, 1 ).onChange( function(val){spot.shadow.focus=val;});
gui.add(params,'shadows' ).onChange( function(val){
renderer.shadowMap.enabled=val;

scene.traverse(function(child){
	if(child.material){child.material.needsUpdate=true;}});
});

gui.open();

function onWindowResize(){
	camera.aspect=window.innerWidth/window.innerHeight;
	camera.updateProjectionMatrix();
	renderer.setSize(window.innerWidth,window.innerHeight );
}

function animate(){
	time=performance.now() / 3000;
	spot.position.x=Math.cos( time ) * 2.5;
	spot.position.z=Math.sin( time ) * 2.5;
	helper.update();
	controls.update();
	renderer.render( scene, camera );
}

</script>

</body>
</html>
