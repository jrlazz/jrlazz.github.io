<!DOCTYPE html>
<head>
<title>stairs.html</title>
<meta charset="utf-8">
<link rel="shortcut icon" href="ok.ico"/>
<style>
body{margin:0px;background-color:#024;font-family:Monospace;overflow:hidden;}
a{font-size:12pt;color:#0c0;text-decoration:none;}
</style>

<script async src="https://unpkg.com/es-module-shims@1.6.3/dist/es-module-shims.js"></script>

<script type="importmap">
	{
		"imports":{
			"three":"https://unpkg.com/three@0.160.0/build/three.module.js",
			"three/addons/":"https://unpkg.com/three@0.160.0/examples/jsm/"
		}
	}
</script>

</head>

<body>

<div style="position:absolute;font-size:20.1px;top:5px;width:99%;text-align:center;color:#fc0;">
<span style="color:#fc0;font-size:20.5pt;">Stairs</span>
</select>
</div>
<button style="position:absolute;left:84%;top:84%;background-color:transparent;border-color:#fc0;text-align:center;"><a id="code" href="stairs.txt" target="_blank" style="color:#fc0;text-decoration:none;font-size:20.5px;">The Code</a></button>

<script type="module">

import * as THREE from "three";
import { OrbitControls } from "three/addons/controls/OrbitControls.js";

var camera,scene,renderer,controls,light,shape;
var p=Math.PI;
var extrudeSettings0=[];
var extrudeSettings1=[];
var geo=[];var mat=[];var mesh=[];
var gA=new THREE.Group();var gB=new THREE.Group();

function init() {

	renderer=new THREE.WebGLRenderer({antialias:true,alpha:true});
	renderer.setSize(window.innerWidth,window.innerHeight);
	renderer.setClearColor('#068',1);
	renderer.outputColorSpace=THREE.LinearSRGBColorSpace;
	document.body.appendChild(renderer.domElement);
	window.addEventListener('resize',onResize,false);

	scene=new THREE.Scene();
	camera=new THREE.PerspectiveCamera(60,innerWidth/innerHeight,1,1000);
	camera.position.set(0,10,60);

	controls=new OrbitControls(camera,renderer.domElement);

	light=new THREE.PointLight(0xffffff,14000);
	light.position.set(20,20,5);
	scene.add(light);

	scene.add(new THREE.AmbientLight(0xffffff,5));

	shape=new THREE.Shape();
	shape.moveTo(0,0);
	shape.lineTo(2,0);
	shape.lineTo(4,24);
	shape.lineTo(-2,24);
	shape.lineTo(0,0);

	extrudeSettings0={steps:2,depth:2,bevelEnabled:false,bevelThickness:1,bevelSize:1,bevelOffset:0,bevelSegments:1}
	geo[0]=new THREE.ExtrudeGeometry(shape,extrudeSettings0);
	mat[0]=new THREE.MeshStandardMaterial({color:'#666',wireframe:false});
	mesh[0]=new THREE.Mesh(geo[0],mat[0]) ;
	for(let z=1;z<20;z++){mesh[z]=mesh[0].clone();mesh[z].position.set(z*2,0,0);mesh[z].rotation.set(z/3,p/2,p/2);gA.add(mesh[z]);}
	gA.position.set(0,-20,0);
	gA.rotation.set(0,0,p/2);
	scene.add(gA);

	extrudeSettings1={steps:2,depth:0.1,bevelEnabled:false,bevelThickness:1,bevelSize:1,bevelOffset:0,bevelSegments:1}
	geo[1]=new THREE.ExtrudeGeometry(shape,extrudeSettings1);
	mat[1]=new THREE.MeshStandardMaterial({color:'#f00',metalness:0.4,roughness:0.4,wireframe:false});
	mesh[1]=new THREE.Mesh(geo[1],mat[1]) ;
	for(let z=1;z<20;z++){mesh[z]=mesh[1].clone();mesh[z].position.set(z*2,0,0);mesh[z].rotation.set(z/3,p/2,p/2);gB.add(mesh[z]);}
	gB.position.set(0,-18.0,0);
	gB.rotation.set(0,0,p/2);
	scene.add(gB);

	geo[2]=new THREE.CylinderGeometry(2,2,38);
	mat[2]=new THREE.MeshBasicMaterial({color:'#ccc',wireframe:false});
	mesh[2]=new THREE.Mesh(geo[2],mat[2]);
	mesh[2].position.set(0,1,0);
	scene.add(mesh[2]);

}

function animate(){
	requestAnimationFrame(animate);
	renderer.render(scene,camera);
}

function onResize(){
	camera.aspect=window.innerWidth/window.innerHeight;
	camera.updateProjectionMatrix();
	renderer.setSize(window.innerWidth,window.innerHeight);
}

init();
animate();

</script>
</body>
</html>


