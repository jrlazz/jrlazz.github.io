<!DOCTYPE html>
<html lang="en">
<head>
<title>ismesh.html</title>
<meta charset="utf-8">
<link rel="shortcut icon" href="ok.ico"/>

<style>
body{margin:0px;border:0px;background-color:#002244;font-family:Monospace;overflow:hidden;}
</style>

<script type="importmap">
	{
		"imports":{
			"three":"https://unpkg.com/three@0.171.0/build/three.module.js",
			"three/addons/":"https://unpkg.com/three@0.171.0/examples/jsm/"
		}
	}
</script>

</head>

<body>

<button style="position:absolute;left:10%;top:2%;background-color:#c90;text-align:center;"><a id="code" href="ismesh.txt" target="_blank" style="color:#024;font-weight:bold;text-decoration:none;">The Code</a></button>

<script type="module">

import * as THREE from "three";
import {OrbitControls} from "three/addons/controls/OrbitControls.js";
import {FBXLoader} from "three/addons/loaders/FBXLoader.js";
import Stats from "three/addons/libs/stats.module.js";

var camera, scene, renderer, loader, controls, stats, mesh, poly, ambLight, dirLight, tex;
var objects=[];
var conta=0;

function init(){

	camera=new THREE.PerspectiveCamera(60,window.innerWidth/window.innerHeight,1,1000);
	camera.position.set(0,25,50);

	scene=new THREE.Scene();
	scene.background=new THREE.Color(0x112244);

	ambLight=new THREE.AmbientLight(0xffcc99,1);
	scene.add(ambLight);

	dirLight=new THREE.DirectionalLight(0xffffff,3);
	dirLight.position.set(-120, 200, 10);
	/*
	dirLight.castShadow=true;
	dirLight.shadow.camera.top=180;
	dirLight.shadow.camera.bottom=- 100;
	dirLight.shadow.camera.left=- 120;
	dirLight.shadow.camera.right=120;
	*/
	scene.add(dirLight);

	// ground
	/*
	tex=new THREE.TextureLoader().load('models/extras/blender_cor_03.jpg');
	tex.wrapS=THREE.RepeatWrapping;tex.wrapT=THREE.RepeatWrapping;
	tex.repeat.set(3,3);
	mesh=new THREE.Mesh(new THREE.PlaneGeometry(50,50), new THREE.MeshStandardMaterial({ map:tex,color: 0xcccccc,side:THREE.DoubleSide, depthWrite: true }));
	mesh.rotation.x=-Math.PI/2;
	mesh.receiveShadow=true;
	scene.add(mesh);
	*/

	// lowpoligons.blend
	loader=new FBXLoader();
	loader.load('models/extras/blember.fbx',function(object){
		object.traverse(function(child){
			if (child.isMesh){
				//child.material=new THREE.MeshStandardMaterial({ map:tex,color: 0xff0000});
				//console.log(child.name);
				objects.push( child );
				conta++;
			}
		});
		for(let z=0;z<conta;z++){
			console.log(objects[z]);
			//objects[z].material=new THREE.MeshStandardMaterial({ map:tex,color: 0xff0000});
		}
		objects[0].material=new THREE.MeshStandardMaterial({color:'#f00'});
		objects[1].material=new THREE.MeshStandardMaterial({color:'#fc9'});
		objects[2].material=new THREE.MeshStandardMaterial({color:'#09c'});
		objects[3].material=new THREE.MeshStandardMaterial({color:'#00f'});
		objects[4].material=new THREE.MeshStandardMaterial({color:'#fff'});
		objects[5].material=new THREE.MeshStandardMaterial({color:'#0f0'});

		poly=object;
		poly.position.set(0,-10,0);
		poly.scale.set(0.1,0.1,0.1);
		poly.rotation.y=Math.PI;
		scene.add(poly);
	});

	renderer=new THREE.WebGLRenderer({antialias: true});
	renderer.setPixelRatio(window.devicePixelRatio);
	renderer.setSize(window.innerWidth,window.innerHeight);
	//renderer.shadowMap.enabled=true;
	document.body.appendChild(renderer.domElement);

	controls=new OrbitControls(camera,renderer.domElement);

	window.addEventListener('resize',onWindowResize);

	// stats
	stats=new Stats();
	document.body.appendChild(stats.dom);
}

function onWindowResize(){
	camera.aspect=window.innerWidth/window.innerHeight;
	camera.updateProjectionMatrix();
	renderer.setSize(window.innerWidth,window.innerHeight);
}

function animate() {
	requestAnimationFrame(animate);
	renderer.render(scene,camera);
	stats.update();
	controls.update();
	//if(poly){poly.rotation.y +=0.01;}
}

init();

animate();

</script>

</body>
</html>
