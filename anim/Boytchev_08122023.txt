<!DOCTYPE html>
<html lang="en">
<head>
<title>Boytchev_08122023.html</title>
<meta charset="utf-8">
<link rel="shortcut icon" href="ok.ico">

<style>
body{margin:0px;background-color:#025;overflow:hidden;}
td{text-align:center;padding:0px;color:#fff;font-family:Monospace;font-size:12pt;border:1px solid red;}
span{position:absolute;font-family:Arial;font-size:12pt;text-align:center;z-index:1;}
</style>

<script async src="https://unpkg.com/es-module-shims@1.6.3/dist/es-module-shims.js"></script>

<script type="importmap">
	{
		"imports":{
			"three":"https://unpkg.com/three@0.156.0/build/three.module.js",
			"three/addons/":"https://unpkg.com/three@0.156.0/examples/jsm/"
		}
	}
</script>

</head>

<body>

<div id="dedo" style="position:absolute;left:10px;top:10px;padding:4px;background-color:#000;border:2px outset #cc6;display:;opacity:0;">?</div>
<div id="dedinho" style="position:absolute;left:10px;top:10px;padding:4px;background-color:#000;border:2px outset #cc6;display:;opacity:0;">?</div>
<span id="aaa" style="position:absolute;left:80%;top:10px;color:#0cf;font-size:20.5px;">... loading ...</span>
<button style="position:absolute;left:84%;top:84%;background-color:transparent;text-align:center;"><a id="code" href="Boytchev_08122023.txt" target="_blank" style="color:#fc0;text-decoration:none;font-size:16pt;">The Code</a></button>

<script type="module">

import * as THREE from 'three';
import { OrbitControls } from 'three/addons/controls/OrbitControls.js';

var renderer,scene,camera,geometry,material,controls,amb,textureLoader,textu,Earthgeo,Earthmat;
var Earth;
var degrad=0.0174532925;
var mouse=new THREE.Vector2();
var raycaster=new THREE.Raycaster();
var psect=[];var alvos=[];
var isected,isects,p,pdinho,pp,lati,str;

var bId=function(id){return document.getElementById(id);}
var daaa=bId("aaa");
var ddedo=bId("dedo");
var ddedinho=bId("dedinho");

function init(){

	renderer=new THREE.WebGLRenderer({antialias:true,alpha:true});
	renderer.setPixelRatio(window.devicePixelRatio);
	renderer.setSize(window.innerWidth,window.innerHeight);
	renderer.setClearColor('#069',1);
	renderer.outputColorSpace=THREE.LinearSRGBColorSpace;

	document.body.appendChild(renderer.domElement);

	scene=new THREE.Scene();

	camera=new THREE.PerspectiveCamera(40,window.innerWidth/window.innerHeight,1,1000);
	camera.position.set(0,0,5);
	
	amb=new THREE.AmbientLight("#fff",4);
	scene.add(amb);

	controls=new OrbitControls(camera, renderer.domElement);

	document.addEventListener('mousedown',onMouse);
	document.addEventListener('mouseup',onMouseUp);

	textureLoader=new THREE.TextureLoader();
	textu=new THREE.TextureLoader().load("img/Equirectangular_projection_SW_3.jpg");
	textu.colorSpace=THREE.SRGBColorSpace;
	Earthmat=new THREE.MeshStandardMaterial({color:"#fff",map:textu,transparent:true,opacity:1});

	Earthgeo=new THREE.SphereGeometry(1.5,32,32);
	Earth=new THREE.Mesh(Earthgeo,Earthmat);
	Earth.rotation.set(0,-1.57,0);
	//Earth.updateWorldMatrix(true);
	//Earth.geometry.computeVertexNormals();
	alvos.push(Earth);
	scene.add(Earth);

	daaa.innerText="Click...";

	// init End
}

function onMouseUp(event){isected=null;daaa.innerText="Click...";daaa.style.color="#0cf";}

function onMouse(event){
	ddedo.style.top=-20+event.clientY+"px";
	ddedo.style.left=60+event.clientX+"px";
	ddedinho.style.top=-20+event.clientY+"px";
	ddedinho.style.left=230+event.clientX+"px";

	mouse.x=(event.clientX/window.innerWidth)*2-1;
	mouse.y=-(event.clientY/window.innerHeight)*2+1;
	mouse.z=0;
	raycaster.setFromCamera(mouse,camera);
	isects=raycaster.intersectObjects(alvos,false);
	if(isects.length>0){
		if(isected!=isects[0].object){
			isected=isects[0].object;
			p=isects[0].point;
			pdinho=isects[0].point;

			daaa.innerText="Clicked!";daaa.style.color="#0f0";

			//console.log("  Object { x: " + p.y + ", y: " + p.y + ", z: " + p.z + " }");
			console.log("p");
			console.log(p);

			lati=90-(57.2957795*(Math.acos(-p.y/1.5)));
			str="";
			ddedo.style.opacity=0;
			if(Math.abs(lati)<80.01){
				str="<table style='padding:0px;'><tr><td colspan='2'>p</td></tr>";
				if(p.y>=0){
					str=str+"<tr><td class='esq'>Latitude</td><td class='dir'>" + (-Number(lati).toFixed(2));str=str+"</td></tr>";
				}
				if(p.y<0){
					str=str+"<tr><td class='esq'>Latitude</td><td class='dir'>" + (Number(-(lati)).toFixed(2));str=str+"</td></tr>";
				}
		 		if(p.z>=0){
					str=str+"<tr><td class='esq'>Longitude</td><td class='dir'>" + Number(0+ (57.2957795*Math.atan(p.x / p.z))).toFixed(2);
				}
				if(p.z<0){
					let longi=(180+ (57.2957795*Math.atan(p.x / p.z)));
					if(longi<=180){
						str=str+"<tr><td class='esq'>Longitude</td><td class='dir'>" + Number(longi).toFixed(2);
					} else {
						str=str+"<tr><td class='esq'>Longitude</td><td class='dir'>" + Number(-90-(270-longi)).toFixed(2);
					}
				}
				str=str+"</td></tr></table>";
				ddedo.innerHTML=str;
				ddedo.style.opacity=1;
			}

/*
And with the following codes...

https://discourse.threejs.org/t/get-threejs-coordinates-of-mesh-intersection-directly-below-mouse-click/18756/3
Mugen87 Sep '20
Using Object3D.worldToLocal() is the right approach.
However, you have to ensure that matrixWorld is up-tp-date. Please try:
const p = intersects[0].point;
mesh.updateWorldMatrix(true, false);
const local_p = mesh.worldToLocal(p);
*/

Earth.updateWorldMatrix(true,true);
let pp=Earth.worldToLocal(pdinho);

			console.log("pp");
			console.log(pp);
			lati=90-(57.2957795*(Math.acos(-pp.y/1.5)));
			str="";
			ddedinho.style.opacity=0;
			if(Math.abs(lati)<80.01){
				str="<table style='padding:0px;'><tr><td colspan='2'>pp</td></tr>";
				if(pp.y>=0){
					str=str+"<tr><td class='esq'>Latitude</td><td class='dir'>" + (-Number(lati).toFixed(2));str=str+"</td></tr>";
				}
				if(p.y<0){
					str=str+"<tr><td class='esq'>Latitude</td><td class='dir'>" + (Number(-(lati)).toFixed(2));str=str+"</td></tr>";
				}
		 		if(pp.z>=0){
					str=str+"<tr><td class='esq'>Longitude</td><td class='dir'>" + Number(-90+ (57.2957795*Math.atan(pp.x / pp.z))).toFixed(2);
				}
				if(pp.z<0){
					let longi=(180+ (57.2957795*Math.atan(pp.x / pp.z)));
					if(longi<=180){
						str=str+"<tr><td class='esq'>Longitude</td><td class='dir'>" + (- Number(90-longi).toFixed(2));
					} else {
						alert(longi);str=str+"<tr><td class='esq'>Longitude</td><td class='dir'>" + Number(longi-90).toFixed(2);
					}
				}
				str=str+"</td></tr></table>";
				ddedinho.innerHTML=str;
				ddedinho.style.opacity=1;
			}
 		}
	}else{
		isected=null;
		ddedo.innerHTML="";ddedinho.innerHTML="";		
		ddedo.style.opacity=0;ddedinho.style.opacity=0;
	}
}

function animate(){
	requestAnimationFrame(animate);
	controls.update();
	renderer.render(scene,camera);
}

init();
animate();

</script>

</body>
</html>
