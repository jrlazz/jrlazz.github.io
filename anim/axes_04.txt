<!DOCTYPE html>
<html lang="en">
<head>
<title>axes_04.html</title>
<meta charset="utf-8">
<link rel="shortcut icon" href="ok.ico">

<style>
body{margin:0px;background-color:#246;overflow:hidden;}
</style>

<script async src="https://unpkg.com/es-module-shims@1.6.3/dist/es-module-shims.js"></script>

<script type="importmap">
	{
		"imports":{
			"three":"https://unpkg.com/three@0.156.0/build/three.module.js",
			"three/addons/":"https://unpkg.com/three@0.156.0/examples/jsm/"
		}
	}
</script>

</head>

<body>

<span id="aaa" style="position:absolute;left:10px;top:10px;color:#fc0;font-size:20.5px;">axes_04</span>
<button style="position:absolute;left:84%;top:84%;background-color:transparent;text-align:center;"><a id="code" href="axes_04.txt" target="_blank" style="color:#fc0;text-decoration:none;font-size:16pt;">The Code</a></button>

<script type="module">

import * as THREE from 'three';
import { OrbitControls } from 'three/addons/controls/OrbitControls.js';

var renderer,scene,camera,geometry,material,controls,amb;
var group=new THREE.Group();
var boly=[];var coly=[];var geo=[];var mat=[];var moly=[];
var bolygeo,bolymat,colygeo,colymat;
var color,sub;
var lim=60;


function gcor(){
	color="";
	for(let i=0;i<3;i++){
        	sub=Math.floor(Math.random()*(256-64)+64).toString(16);
	       	color +=(sub.length==1?"0"+sub:sub);
    	}
    	return "#"+color;
}

function cor(){
    let r=function(){return Math.floor(Math.random()*256)};
    return "rgb("+r()+","+r()+","+r()+")";
}



function randomColor(){
     color='rgb('+Math.round(Math.random()*255)+','+Math.round(Math.random()*255)+','+Math.round(Math.random()*255)+')';
     return color;
}

function init(){
	renderer=new THREE.WebGLRenderer({antialias:true,alpha:true});
	renderer.setPixelRatio(window.devicePixelRatio);
	renderer.setSize(window.innerWidth,window.innerHeight);
	renderer.setClearColor(cor(),0);
	renderer.outputColorSpace=THREE.LinearSRGBColorSpace;

	document.body.appendChild(renderer.domElement);

	scene=new THREE.Scene();

	camera=new THREE.PerspectiveCamera(50,window.innerWidth/window.innerHeight,1,1000);
	camera.position.set(0,0,8);
	
	amb=new THREE.AmbientLight("#fff",6);
	scene.add(amb);

	controls=new OrbitControls(camera, renderer.domElement);

	for(let z=1;z<lim;z++){
		let sca=Math.random()+2;

		geo[1]=new THREE.SphereGeometry(0.03,16,16);
		mat[1]=new THREE.MeshStandardMaterial({color:cor()});
		moly[1]=new THREE.Mesh(geo[1],mat[1]);
		moly[1].geometry.translate(0,0,sca);

		geo[2]=new THREE.SphereGeometry(0.03,16,16);
		mat[2]=new THREE.MeshStandardMaterial({color:cor()});
		moly[2]=new THREE.Mesh(geo[2],mat[2]);
		moly[2].geometry.translate(0,sca,0);

		geo[3]=new THREE.SphereGeometry(0.03,16,16);
		mat[3]=new THREE.MeshStandardMaterial({color:cor()});
		moly[3]=new THREE.Mesh(geo[3],mat[3]);
		moly[3].geometry.translate(sca,0,0);

		coly[0]=new THREE.AxesHelper(sca);
		coly[0].setColors(cor(),cor(),cor());

		coly[0].add(moly[1]);
		coly[0].add(moly[2]);
		coly[0].add(moly[3]);

		coly[100]=coly[0].clone();coly[100+z]=coly[100].clone();coly[100+z].rotation.set(Math.random()*Math.PI*2,Math.random()*Math.PI*2,Math.random()*Math.PI*2);group.add(coly[100+z]);
		coly[200]=coly[0].clone();coly[200+z]=coly[200].clone();coly[200+z].rotation.set(Math.random()*Math.PI*2,Math.random()*Math.PI*2,Math.random()*Math.PI*2);group.add(coly[200+z]);
		coly[300]=coly[0].clone();coly[300+z]=coly[300].clone();coly[300+z].rotation.set(Math.random()*Math.PI*2,Math.random()*Math.PI*2,Math.random()*Math.PI*2);group.add(coly[300+z]);
		
	}
	scene.add(group);

/*
	const extrudePath = new THREE.LineCurve3(new THREE.Vector3(), new THREE.Vector3(6, 5, -7));
	const extrudeSettings = {
		bevelEnabled: false,
		extrudePath
	};

	const shape = new THREE.Shape([
		new THREE.Vector2(1, 1),
		new THREE.Vector2(-1, 1),
		new THREE.Vector2(-1, -1),
		new THREE.Vector2(1, -1)
	]);
	const geometry = new THREE.ExtrudeGeometry(shape,extrudeSettings);
	var texture=new THREE.TextureLoader().load("img/music.png");
	texture.repeat=new THREE.Vector2(0.5,0.5);
	texture.wrapS=THREE.RepeatWrapping;
	texture.wrapT=THREE.RepeatWrapping;

	const material = new THREE.MeshPhongMaterial({color:0x6699cc,map:texture,wireframe:false});
	const mesh = new THREE.Mesh(geometry, material);
	mesh.scale.multiplyScalar(0.2);
	scene.add(mesh);
*/
}

function animate(){
	requestAnimationFrame(animate);
	controls.update();
		group.rotation.x +=0.01;
		group.rotation.y +=0.015;
		group.rotation.z +=0.005;
	renderer.render(scene,camera);
}

init();
animate();

</script>

</body>
</html>
