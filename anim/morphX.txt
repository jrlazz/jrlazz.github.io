<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>morphX.html</title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
<link rel="shortcut icon" href="https://threejs.org/files/favicon.ico"/>		

<style>
body{background-color:#999;margin:0px;overflow:hidden;}
</style>

<script async src="https://unpkg.com/es-module-shims@1.6.3/dist/es-module-shims.js"></script>
<script type="importmap">{"imports":{"three":"https://unpkg.com/three@0.152.0/build/three.module.js","three/addons/":"https://unpkg.com/three@0.152.0/examples/jsm/"}}</script>

</head>

<body>
<a href="morphX.txt" target="_blank" style="position:absolute;left:10px;top:10px;font-size:16pt;color:#ff0;">View code</a>
<span id="sp"></span>
<script type="module">

import * as THREE from "three";

var renderer,scene,camera,light,cubeGeometry,material,mesh,gui,pose;
var p=0;
var m=0.005;

function init(){
	renderer=new THREE.WebGLRenderer({antialias:true,alpha:true});
	renderer.outputColorSpace=THREE.LinearSRGBColorSpace;
	renderer.setPixelRatio(window.devicePixelRatio);
	renderer.setSize(window.innerWidth,window.innerHeight);
	document.body.appendChild(renderer.domElement);

	scene=new THREE.Scene();

	camera=new THREE.PerspectiveCamera(50,window.innerWidth/window.innerHeight,1,1000);
	camera.position.set(0,0,200);

	light=new THREE.PointLight();light.position.set(0,150,300);scene.add(light);

	cubeGeometry=new THREE.BoxGeometry(50,50,50,100,20,20);

	var ballPositions=[],
	ballNormals=[],
	platePositions=[],
	plateNormals=[],
	pos=cubeGeometry.getAttribute('position'),
	nor=cubeGeometry.getAttribute('normal'),
	vec=new THREE.Vector3();

	for(var i=0;i<pos.count;i++){
		platePositions.push(2*vec.x,vec.y/20+2*Math.sin(vec.x),vec.z);
		vec.set(pos.getX(i),pos.getY(i),pos.getZ(i));
		vec.setLength(50*Math.pow(3/4/Math.PI,1/3));
		ballPositions.push(vec.x,vec.y,vec.z);
		vec.setLength(1);
		ballNormals.push(vec.x,vec.y,vec.z);
	}

	cubeGeometry.morphAttributes.position=[
		new THREE.Float32BufferAttribute(platePositions,3),
		new THREE.Float32BufferAttribute(ballPositions,3)
	]

	cubeGeometry.morphAttributes.normal=[
		new THREE.Float32BufferAttribute(plateNormals,3),
		new THREE.Float32BufferAttribute(ballNormals,3)
	]

	material=new THREE.MeshPhongMaterial({color:'#c0c'});
	mesh=new THREE.Mesh(cubeGeometry,material);
	scene.add(mesh);

}
function animate(){
	requestAnimationFrame(animate);
	p++;
	if(p<200){mesh.morphTargetInfluences[1] +=m;}
	if(p>200 && p<400){mesh.morphTargetInfluences[1] -=m;}
	if(p==400){p=0;mesh.morphTargetInfluences[1]=0;}
	//document.getElementById("sp").innerText=p + "  "+ mesh.morphTargetInfluences[1];
	mesh.rotation.x +=0.01;
	mesh.rotation.y +=0.01;
	renderer.render(scene,camera);
}

init();
animate();

</script>
</body>
</html>